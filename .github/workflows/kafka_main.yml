name: Deploy to Azure VM

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/kafka-compose-local.yaml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH key
      run: |
        echo "${{ secrets.AZURE_VM_SSH_KEY }}" > azure_vm_ssh_key
        chmod 600 azure_vm_ssh_key

    - name: Deploy to Azure VM
      env:
        AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
        AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
        
      run: |
        # Conectar y crear la carpeta /etc si no existe
        
        # Transferir el archivo auth.jaas a la VM
        scp -o StrictHostKeyChecking=no -i azure_vm_ssh_key -r etc/auth.jaas $AZURE_VM_USERNAME@$AZURE_VM_IP:
        # ssh -o StrictHostKeyChecking=no -i azure_vm_ssh_key $AZURE_VM_USERNAME@$AZURE_VM_IP "sudo mv auth.jaas etc/" 

        #chaecar si existe la carpeta etc
        ssh -o StrictHostKeyChecking=no -i azure_vm_ssh_key $AZURE_VM_USERNAME@$AZURE_VM_IP << 'EOF'
        
          DIR="etc/" 
          if [ ! -d "$DIR" ]; then
          sudo mkdir -m 777 etc
          echo "Installing etc folder in ${DIR}..."
          fi
          sudo mv -f auth.jaas etc/
        EOF

        # Transferir el archivo kafka-compose.yaml a la VM
        scp -o StrictHostKeyChecking=no -i azure_vm_ssh_key -r kafka-compose.yaml $AZURE_VM_USERNAME@$AZURE_VM_IP:
        
        # Conectar y ejecutar comandos en la VM
        ssh -o StrictHostKeyChecking=no -i azure_vm_ssh_key $AZURE_VM_USERNAME@$AZURE_VM_IP << 'EOF'
        
          # Crear un archivo .env con las variables de entorno
          echo "KAFKA_CLIENT_USERS=${{ secrets.KAFKA_CLIENT_USERS }}" > .env
          echo "KAFKA_CLIENT_PASSWORDS=${{ secrets.KAFKA_CLIENT_PASSWORDS }}" >> .env
          echo "SPRING_SECURITY_USER_NAME=${{ secrets.SPRING_SECURITY_USER_NAME }}" >> .env
          echo "SPRING_SECURITY_USER_PASSWORD=${{ secrets.SPRING_SECURITY_USER_PASSWORD }}" >> .env
          
          # Crear el archivo login.properties control center usando variables de entorno
          echo "${{ vars.LOGIN_PROPERTIES }}" > login.properties
          sudo mv login.properties etc/
          cd etc
          chmod 644 auth.jaas login.properties
          cd ..
          
          # Levantar los servicios con Docker Compose
          docker compose -f kafka-compose.yaml stop
          docker compose -f kafka-compose.yaml up -d
        EOF
