name: Deploy to Azure VM

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH key
      run: |
        echo "${{ secrets.AZURE_VM_SSH_KEY }}" > azure_vm_ssh_key
        chmod 600 azure_vm_ssh_key

    - name: Deploy to Azure VM
      env:
        AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
        AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
        KAFKA_CLIENT_USERS: ${{ secrets.KAFKA_CLIENT_USERS }}
        KAFKA_CLIENT_PASSWORDS: ${{ secrets.KAFKA_CLIENT_PASSWORDS }}
        SPRING_SECURITY_USER_NAME: ${{ secrets.SPRING_SECURITY_USER_NAME }}
        SPRING_SECURITY_USER_PASSWORD: ${{ secrets.SPRING_SECURITY_USER_PASSWORD }}
        
      run: |
        # Transferir el archivo kafka-compose.yml a la VM
        scp -o StrictHostKeyChecking=no -i azure_vm_ssh_key -r kafka-compose.yml $AZURE_VM_USERNAME@$AZURE_VM_IP:

        # Conectar y ejecutar comandos en la VM
        ssh -o StrictHostKeyChecking=no -i azure_vm_ssh_key $AZURE_VM_USERNAME@$AZURE_VM_IP << 'EOF'
        
          # Crear un archivo .env con las variables de entorno
          cat <<EOT > .env
          KAFKA_CLIENT_USERS=${KAFKA_CLIENT_USERS}
          KAFKA_CLIENT_PASSWORDS=${KAFKA_CLIENT_PASSWORDS}
          SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
          SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
          EOT

          # Levantar los servicios con Docker Compose
          docker-compose -f kafka-compose.yaml down
          docker-compose -f kafka-compose.yaml up -d
        EOF
